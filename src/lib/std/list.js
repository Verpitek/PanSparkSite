var B=new Map;function E(C){B=new Map,C.registerOpCode("LIST_CREATE",(j,A)=>{if(j.length<3||j[1]!==">>")throw new Error(`LIST_CREATE syntax error: Expected 'LIST_CREATE [values] >> listName', got ${j.length} arguments`);if(j[0].split(",").length>0||j[1]===">>"){let q=j[0].split(","),w=[];for(let z=0;z<q.length;z++)try{w.push(A.getVar(q[z].trim(),0))}catch(D){throw new Error(`LIST_CREATE error: Cannot resolve value '${q[z].trim()}' in list creation`)}B.set(j[2],w)}else B.set(j[2],[])}),C.registerOpCode("LIST_GET",(j,A)=>{if(j.length!==4||j[2]!==">>")throw new Error(`LIST_GET syntax error: Expected 'LIST_GET listName index >> varName', got ${j.length} arguments`);let q=B.get(j[0]);if(!q)throw new Error(`LIST_GET error: List '${j[0]}' does not exist`);let w=A.getVar(j[1],0);if(w<0||w>=q.length)throw new Error(`LIST_GET error: Index ${w} out of bounds for list '${j[0]}' (length: ${q.length})`);A.setVar(j[3],q[w])}),C.registerOpCode("LIST_SET",(j,A)=>{if(j.length!==4||j[2]!==">>")throw new Error(`LIST_SET syntax error: Expected 'LIST_SET value index >> listName', got ${j.length} arguments`);let q=A.getVar(j[0],0),w=A.getVar(j[1],0),z=B.get(j[3]);if(!z)throw new Error(`LIST_SET error: List '${j[3]}' does not exist`);if(w<0||w>=z.length)throw new Error(`LIST_SET error: Index ${w} out of bounds for list '${j[3]}' (length: ${z.length})`);z[w]=q,B.set(j[3],z)}),C.registerOpCode("LIST_PUSH",(j,A)=>{if(j.length!==3||j[1]!==">>")throw new Error(`LIST_PUSH syntax error: Expected 'LIST_PUSH value >> listName', got ${j.length} arguments`);let q=A.getVar(j[0],0),w=B.get(j[2]);if(!w)throw new Error(`LIST_PUSH error: List '${j[2]}' does not exist`);w.push(q),B.set(j[2],w)}),C.registerOpCode("LIST_LEN",(j,A)=>{if(j.length!==3||j[1]!==">>")throw new Error(`LIST_LEN syntax error: Expected 'LIST_LEN listName >> varName', got ${j.length} arguments`);let q=B.get(j[0]);if(!q)throw new Error(`LIST_LEN error: List '${j[0]}' does not exist`);A.setVar(j[2],q.length)}),C.registerOpCode("LIST_DUMP",(j,A)=>{if(j.length!==1)throw new Error(`LIST_DUMP syntax error: Expected 'LIST_DUMP listName', got ${j.length} arguments`);let q=B.get(j[0]);if(!q)throw new Error(`LIST_DUMP error: List '${j[0]}' does not exist`);C.buffer.push(`LIST_DUMP [${j[0]}]: [${q.join(", ")}] (length: ${q.length})`)}),C.registerOpCode("LIST_SORT",(j,A)=>{if(j.length<1||j.length>2)throw new Error(`LIST_SORT syntax error: Expected 'LIST_SORT listName [asc|desc]', got ${j.length} arguments`);let q=B.get(j[0]);if(!q)throw new Error(`LIST_SORT error: List '${j[0]}' does not exist`);let w=j.length===2?j[1].toLowerCase():"asc";if(w!=="asc"&&w!=="desc")throw new Error(`LIST_SORT error: Invalid sort order '${j[1]}'. Use 'asc' or 'desc'`);if(w==="desc")q.sort((z,D)=>D-z);else q.sort((z,D)=>z-D);B.set(j[0],q)})}export{E as registerWith};
